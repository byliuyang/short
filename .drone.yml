kind: pipeline
name: default

steps:
  - name: lint frontend
    image: docker
    environment:
      RECAPTCHA_SITE_KEY:
        from_secret: RECAPTCHA_SITE_KEY
    commands:
      - docker build -t lint-frontend --build-arg RECAPTCHA_SITE_KEY=$RECAPTCHA_SITE_KEY -f frontend/Dockerfile-lint frontend
      - docker run lint-frontend
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - master
      event:
        - pull_request
  - name: test frontend
    image: docker
    environment:
      RECAPTCHA_SITE_KEY:
        from_secret: RECAPTCHA_SITE_KEY
    commands:
      - docker build -t test-frontend --build-arg RECAPTCHA_SITE_KEY=$RECAPTCHA_SITE_KEY -f frontend/Dockerfile-test frontend
      - docker run test-frontend
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - master
      event:
        - pull_request

  - name: test backend
    image: docker
    commands:
      - docker build -t test-backend -f backend/Dockerfile-test backend
      - docker run test-backend
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - master
      event:
        - pull_request

  - name: report code coverage
    image: docker
    environment:
      CODECOV_TOKEN:
        from_secret: CODECOV_TOKEN
    commands:
      - docker build -t report-coverage --build-arg CODECOV_TOKEN=$CODECOV_TOKEN -f Dockerfile-coverage .
      - docker run report-coverage
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - master
      event:
        - pull_request

  - name: create staging frontend assets
    image: node:12.7.0-alpine
    environment:
      RECAPTCHA_SITE_KEY:
        from_secret: STAGING_RECAPTCHA_SITE_KEY
    volumes:
      - name: frontend-dep
        path: /drone/src/frontend/node_modules
    commands:
      - apk add --no-cache bash git
      - cd frontend
      - yarn
      - REACT_APP_RECAPTCHA_SITE_KEY=$RECAPTCHA_SITE_KEY CI=true yarn build:staging
    when:
      branch:
        - master
      event:
        - push

  - name: build staging frontend Docker image
    image: docker
    commands:
      - docker build -t short-frontend:latest -f frontend/Dockerfile frontend
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - master
      event:
        - push

  - name: build backend Docker image
    image: docker
    commands:
      - docker build -t short-backend:latest -f backend/Dockerfile backend
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - master
      event:
        - push

  - name: publish staging images to DockerHub
    image: docker
    environment:
      DOCKERHUB_USERNAME:
        from_secret: DOCKERHUB_USERNAME
      DOCKERHUB_PASSWORD:
        from_secret: DOCKERHUB_PASSWORD
    commands:
      - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - docker tag short-frontend:latest $DOCKERHUB_USERNAME/short-frontend-staging:latest
      - docker tag short-backend:latest $DOCKERHUB_USERNAME/short-backend-staging:latest
      - docker push $DOCKERHUB_USERNAME/short-frontend-staging:latest
      - docker push $DOCKERHUB_USERNAME/short-backend-staging:latest
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - master
      event:
        - push

  - name: create production frontend assets
    image: node:12.7.0-alpine
    environment:
      RECAPTCHA_SITE_KEY:
        from_secret: RECAPTCHA_SITE_KEY
    volumes:
      - name: frontend-dep
        path: /drone/src/frontend/node_modules
    commands:
      - apk add --no-cache bash git
      - cd frontend
      - yarn
      - REACT_APP_RECAPTCHA_SITE_KEY=$RECAPTCHA_SITE_KEY CI=true yarn build:production
    when:
      branch:
        - production
      event:
        - push

  - name: build production frontend Docker image
    image: docker
    commands:
      - docker build -t short-frontend:latest -f frontend/Dockerfile frontend
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - production
      event:
        - push

  - name: publish production images to DockerHub
    image: docker
    environment:
      DOCKERHUB_USERNAME:
        from_secret: DOCKERHUB_USERNAME
      DOCKERHUB_PASSWORD:
        from_secret: DOCKERHUB_PASSWORD
    commands:
      - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - docker tag short-frontend:latest $DOCKERHUB_USERNAME/short-frontend:latest
      - docker tag short-backend:latest $DOCKERHUB_USERNAME/short-backend:latest
      - docker push $DOCKERHUB_USERNAME/short-frontend:latest
      - docker push $DOCKERHUB_USERNAME/short-backend:latest
    volumes:
      - name: docker
        path: /var/run/docker.sock
    when:
      branch:
        - production
      event:
        - push
volumes:
  - name: docker
    host:
      path: /var/run/docker.sock
  - name: frontend-dep
    host:
      path: /drone/frontend-dep
